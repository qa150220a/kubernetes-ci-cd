apiVersion: apps/v1
kind: Deployment
metadata:
  name: puzzle
  labels:
    app: puzzle
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: puzzle
  template:
    metadata:
      labels:
        app: puzzle
        tier: puzzle
    spec:
      containers:
      - image: 127.0.0.1:30400/puzzle:$BUILD_TAG
        name: puzzle
        imagePullPolicy: Always
        lifecycle:
          postStart:
            exec:
              command: ["/up.sh"]
          preStop:
            exec:
              command: ["/down.sh"]
        ports:
        - containerPort: 3000
          name: puzzle

---
apiVersion: v1
kind: Service
metadata:
  name: puzzle
  labels:
    app: puzzle
spec:
  ports:
    - port: 3000
      targetPort: 3000
  selector:
    app: puzzle
    tier: puzzle
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
        tier: mongo
    spec:
      containers:
      - image: mongo:latest
        name: mongo
        imagePullPolicy: Always
        ports:
        - containerPort: 27017
          name: mongo
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    app: mongo
    tier: mongo
  type: NodePort
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
 name: puzzle
 annotations:
   nginx.ingress.kubernetes.io/enable-cors: "true"
   nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS"
   nginx.ingress.kubernetes.io/cors-allow-origin: "http://kr8sswordz.10.244.1.51.xip.io"
   nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
spec:
  backend:
    serviceName: puzzle
    servicePort: 3000
  rules:
  - host: puzzle.10.244.1.51.xip.io 
    http:
      paths:
      - path: /
        backend:
          serviceName: puzzle
          servicePort: 3000
